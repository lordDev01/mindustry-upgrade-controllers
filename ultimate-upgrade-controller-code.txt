jump 27 notEqual ff null
print "Guide: link to a factory and set the config you want, then connect as many reconstructors you want, limit is 16"
print "alternative way to select unit tree for upgrade"
set upgraderTypeSel null
print "max distance to bind an payloadt that requires a taxi unit"
set maxTaxiDistance 250
print "Max Distance to bind an payload that doesn't require a taxi unit"
set maxPayloadDistance 250
set defaultDropDist 15
print "distance from reconstructor to drop un needed units"
print "shoot at proc for default drop, shot anywhere else to enable custom drop"
print "distance to aproach drop location"
set safeDropZoneRadius 6.5
print "distance from reconstructors to drop stuck units"
set distToDropStuckUnits 1.5
print "min amount of power to work with"
set minPower% 8
print "- config both taxi services here -"
set taxiService 1
set ignoreStuckUnits 0
op mul ff 1000 @thisx
op add ff ff @thisy
op floor ff ff @thisy
op add ff1 ff 1
op sub ff2 ff 1
op add ff3 ff 2
op div minPower% minPower% 100
getlink link linkIndex
op add linkIndex linkIndex 1
jump 33 lessThanEq linkIndex @links
set linkIndex 0
set unitIndex -1
jump 27 always linkIndex @links
sensor lt link @type
set air true
jump 41 equal lt @air-factory
set air false
jump 41 equal lt @ground-factory
jump 41 equal lt @naval-factory
jump 45 notEqual upgraderTypeSel null
jump 50 always lt @naval-factory
sensor factoryConfig link @config
jump 45 notEqual upgraderTypeSel null
jump 27 equal factoryConfig null
jump 46 always factoryConfig null
set factoryConfig upgraderTypeSel
sensor unitBaseID factoryConfig @id
lookup unit unitBase unitBaseID
jump 51 equal unitBase factoryConfig
jump 27 always lt @naval-factory
jump 27 equal unitBase null
jump 53 equal unitBase @flare
jump 54 notEqual unitBase @mono
set air true
jump 56 equal prev.unitBase null
jump 939 notEqual unitBase prev.unitBase
set prev.unitBase unitBase
jump 61 notEqual payenter.Index.cleared true
set taxi.Index.cleared false
set air.Index.cleared false
set payenter.Index.cleared false
radar ally player any distance @this 1 unit.shooter
ubind unit.shooter
jump 77 equal @unit null
sensor shootx @unit @shootX
sensor shooty @unit @shootY
sensor shooting @unit @shooting
jump 77 equal shooting 0
op sub ∆x.getblockDropRange shootx @thisx
op sub ∆y.getblockDropRange shooty @thisy
op len getblockDropDistance ∆x.getblockDropRange ∆y.getblockDropRange
set defaultDrop false
jump 75 greaterThanEq getblockDropDistance 2.8
set defaultDrop true
jump 77 always processor @this
set dropx shootx
set dropy shooty
op add upgraderID unitBaseID 0
set managePayloads false
jump 91 equal lt @additive-reconstructor
op add upgraderID unitBaseID 1
jump 91 equal lt @multiplicative-reconstructor
op add upgraderID unitBaseID 2
jump 91 equal lt @exponential-reconstructor
op add upgraderID unitBaseID 3
jump 91 equal lt @tetrative-reconstructor
set upgraderID prevUpgraderID.[f]
jump 90 equal lt @payload-conveyor
jump 90 equal lt @payload-router
jump 27 always lt @tetrative-reconstructor
set managePayloads true
set prevLink.[f] link
set prevUpgraderID.[f] upgraderID
lookup unit upgraderType upgraderID
jump 98 lessThanEq unitIndex 12
set linkIndex 0
set unitIndex -1
jump 27 always unitIndex 11
op add unitIndex unitIndex 1
jump 429 equal managePayloads true
sensor NetCap link @powerNetCapacity
sensor NetStored link @powerNetStored
op div PowerNet% NetStored NetCap
jump 27 lessThanEq PowerNet% minPower%
jump 108 equal upgraderType @crawler
jump 108 equal unitBase @dagger
jump 108 greaterThanEq upgraderID 25
jump 429 always air true
jump 27 equal taxiService false
op add return @counter 1
op add @counter @counter 1
jump 167 always x false
op mul loaderSel 4 unitIndex
op add @counter @counter loaderSel
set returnedLoad loader1
set returnedPayload payload1
set returnedDest Dest1
set @counter return
set returnedLoad loader2
set returnedPayload payload2
set returnedDest Dest2
set @counter return
set returnedLoad loader3
set returnedPayload payload3
set returnedDest Dest3
set @counter return
set returnedLoad loader4
set returnedPayload payload4
set returnedDest Dest4
set @counter return
set returnedLoad loader5
set returnedPayload payload5
set returnedDest Dest5
set @counter return
set returnedLoad loader6
set returnedPayload payload6
set returnedDest Dest6
set @counter return
set returnedLoad loader7
set returnedPayload payload7
set returnedDest Dest7
set @counter return
set returnedLoad loader8
set returnedPayload payload8
set returnedDest Dest8
set @counter return
set returnedLoad loader9
set returnedPayload payload9
set returnedDest Dest9
set @counter return
set returnedLoad loader10
set returnedPayload payload10
set returnedDest Dest10
set @counter return
set returnedLoad loader11
set returnedPayload payload11
set returnedDest Dest11
set @counter return
set returnedLoad loader12
set returnedPayload payload12
set returnedDest Dest12
set @counter return
set returnedLoad loader13
set returnedPayload payload13
set returnedDest Dest13
set @counter return
end
ubind returnedLoad
jump 188 equal @unit null
sensor dead @unit @dead
jump 188 equal dead true
sensor ctrld @unit @controlled
jump 217 greaterThanEq ctrld 2
jump 188 equal ctrld 0
sensor hisFlag @unit @flag
jump 346 equal hisFlag ff1
sensor hisFlag @unit @flag
jump 187 notEqual hisFlag ff
ubind returnedPayload
jump 188 equal @unit null
sensor dead @unit @dead
jump 188 equal dead true
sensor ctrld @unit @controlled
jump 188 greaterThanEq ctrld 2
sensor returnedType @unit @type
jump 188 notEqual returnedType upgraderType
jump 290 always ctrld 1
set prevTaxiFlag hisFlag
set fi null
ubind upgraderType
jump 166 equal @unit null
jump 194 notEqual fi null
set fi @unit
jump 199 always fi null
sensor fiDead fi @dead
jump 198 equal fiDead false
set fi null
jump 166 always fiDead false
jump 345 equal @unit fi
sensor ctrld @unit @controlled
jump 189 greaterThanEq ctrld 2
jump 203 equal ctrld 1
ucontrol flag 0 0 0 0 0
sensor uflag @unit @flag
jump 189 equal uflag ff
jump 189 equal uflag ff3
sensor payload.xDist @unit @x
sensor payload.yDist @unit @y
set dist.link link
sensor Dest.xDist dist.link @x
sensor Dest.yDist dist.link @y
op sub ∆x payload.xDist Dest.xDist
op sub ∆y payload.yDist Dest.yDist
op len payload.Distance ∆x ∆y
jump 189 greaterThan payload.Distance maxTaxiDistance
ucontrol flag ff 0 0 0 0
jump 221 always uflag ff
ubind upgraderType
jump 345 equal @unit null
sensor payloadSize @unit @size
jump 224 always uflag ff
set storePayload @unit
ucontrol unbind ff 0 0 0 0
sensor payloadSize storePayload @size
set loaderType @mega
jump 229 lessThan payloadSize 2.5
set loaderType @quad
jump 229 lessThan payloadSize 4.5
set loaderType @oct
op add return @counter 1
op add @counter @counter 1
jump 259 always payloadSize 4.5
op mul loaderSel 2 unitIndex
op add @counter @counter loaderSel
set prevStored loader1
set @counter return
set prevStored loader2
set @counter return
set prevStored loader3
set @counter return
set prevStored loader4
set @counter return
set prevStored loader5
set @counter return
set prevStored loader6
set @counter return
set prevStored loader7
set @counter return
set prevStored loader8
set @counter return
set prevStored loader9
set @counter return
set prevStored loader10
set @counter return
set prevStored loader11
set @counter return
set prevStored loader12
set @counter return
set prevStored loader13
ubind prevStored
jump 267 equal @unit null
sensor dead @unit @dead
jump 267 equal dead 1
sensor ctrld @unit @controlled
jump 267 greaterThanEq ctrld 2
sensor returnedType @unit @type
jump 286 equal returnedType loaderType
set fi1 null
ubind loaderType
jump 272 notEqual fi1 null
set fi1 @unit
jump 277 always fi1 null
sensor fi1Dead fi1 @dead
jump 276 equal fi1Dead false
set fi1 null
jump 345 always fi1 null
jump 345 equal @unit fi1
sensor ctrld @unit @controlled
jump 268 greaterThanEq ctrld 2
jump 281 equal ctrld 1
ucontrol flag 0 0 0 0 0
sensor uflag @unit @flag
jump 284 equal prevTaxiFlag 0
jump 268 equal uflag prevTaxiFlag
jump 268 notEqual uflag 0
ucontrol flag ff 0 0 0 0
set storeDest link
set storeLoad @unit
op add return @counter 1
op add @counter @counter 1
jump 346 always x false
op mul loaderSel 4 unitIndex
op add @counter @counter loaderSel
set loader1 storeLoad
set payload1 storePayload
set Dest1 storeDest
set @counter return
set loader2 storeLoad
set payload2 storePayload
set Dest2 storeDest
set @counter return
set loader3 storeLoad
set payload3 storePayload
set Dest3 storeDest
set @counter return
set loader4 storeLoad
set payload4 storePayload
set Dest4 storeDest
set @counter return
set loader5 storeLoad
set payload5 storePayload
set Dest5 storeDest
set @counter return
set loader6 storeLoad
set payload6 storePayload
set Dest6 storeDest
set @counter return
set loader7 storeLoad
set payload7 storePayload
set Dest7 storeDest
set @counter return
set loader8 storeLoad
set payload8 storePayload
set Dest8 storeDest
set @counter return
set loader9 storeLoad
set payload9 storePayload
set Dest9 storeDest
set @counter return
set loader10 storeLoad
set payload10 storePayload
set Dest10 storeDest
set @counter return
set loader11 storeLoad
set payload11 storePayload
set Dest11 storeDest
set @counter return
set loader12 storeLoad
set payload12 storePayload
set Dest12 storeDest
set @counter return
set loader13 storeLoad
set payload13 storePayload
set Dest13 storeDest
set @counter return
jump 642 always x false
ubind returnedPayload
jump 345 equal returnedPayload null
sensor NaN.ReturnFlagCheck @unit @flag
jump 345 equal NaN.ReturnFlagCheck ff2
ucontrol unbind dropx dropy 0 0 0
ubind returnedLoad
sensor payloadType returnedLoad @payloadType
jump 412 equal payloadType upgraderType
jump 396 equal payloadType null
sensor destAngle returnedDest @rotation
sensor dx returnedDest @x
sensor dy returnedDest @y
jump 360 equal defaultDrop 0
jump 362 always defaultDrop false
op land dropping dropx dropy
jump 369 equal dropping true
op mul theta destAngle 90
op cos ∆x theta 90
op sin ∆y theta 90
op mul ∆x ∆x defaultDropDist
op add dropx ∆x dx
op mul ∆y ∆y defaultDropDist
op add dropy ∆y dy
ucontrol within dropx dropy safeDropZoneRadius s 0
set dropTry false
jump 375 equal s true
ucontrol move dropx dropy 5 s 0
ucontrol payDrop 0 0 0 0 0
jump 378 always s true
ucontrol payDrop 0 0 0 0 0
ucontrol flag ff1 dy 0 0 0
set dropTry true
jump 381 greaterThan unitDropAttempts 2
op add unitDropAttempts unitDropAttempts 1
jump 346 always payloadType null
jump 393 notEqual dropTry true
op add Droptt.time @time 555
sensor unit.ttdropx @unit @x
sensor unit.ttdropy @unit @y
ucontrol move dx dy 5 s 0
ucontrol payDrop dx dy 5 s 0
sensor loadtt.type returnedLoad @payloadType
jump 393 equal loadtt.type upgraderType
jump 393 equal loadtt.type null
jump 383 greaterThan Droptt.time @time
ucontrol move unit.ttdropx unit.ttdropy 5 s 0
ucontrol payDrop 0 0 0 0 0
set unitDropAttempts 0
set returnedPayload null
jump 345 always payloadType null
sensor px returnedPayload @x
sensor py returnedPayload @y
sensor returnedType returnedPayload @type
jump 393 notEqual returnedType upgraderType
op land firstMove px py
jump 345 equal firstMove 0
ucontrol within px py 1.2 unitTakeWithin 0
jump 407 equal unitTakeWithin true
ucontrol move px py 0 0 0
ucontrol flag ff dy 0 0 0
jump 345 always unitTakeWithin true
ucontrol payTake true dy 0 0 0
sensor payloadCount returnedLoad @payloadCount
jump 345 lessThanEq payloadCount 0
ucontrol flag ff1 dy 0 0 0
jump 346 always payloadCount 0
sensor dx returnedDest @x
sensor dy returnedDest @y
sensor use returnedDest @payloadCount
op land firstMove dx dy
jump 345 equal firstMove 0
jump 420 greaterThanEq use 1
ucontrol within dx dy 1.7 unitDropWithin 0
jump 423 equal unitDropWithin true
ucontrol move dx dy 1.7 unitDropWithin 0
ucontrol flag ff1 dy 1.7 unitDropWithin 0
jump 345 always unitTakeWithin true
ucontrol payDrop returnedDest 99999 0 0 0
ucontrol itemDrop returnedDest 99999 0 0 0
sensor destPayloadCount returnedDest @payloadCount
jump 345 lessThanEq destPayloadCount 0
ucontrol flag ff dy 1.7 unitDropWithin 0
jump 345 always unitTakeWithin true
op add return @counter 1
op add @counter @counter 1
jump 474 always destPayloadCount 0
op mul paySel 3 unitIndex
op add @counter @counter paySel
set returned.payload noTaxiPayload1
set returned.Dest noTaxiDest1
set @counter return
set returned.payload noTaxiPayload2
set returned.Dest noTaxiDest2
set @counter return
set returned.payload noTaxiPayload3
set returned.Dest noTaxiDest3
set @counter return
set returned.payload noTaxiPayload4
set returned.Dest noTaxiDest4
set @counter return
set returned.payload noTaxiPayload5
set returned.Dest noTaxiDest5
set @counter return
set returned.payload noTaxiPayload6
set returned.Dest noTaxiDest6
set @counter return
set returned.payload noTaxiPayload7
set returned.Dest noTaxiDest7
set @counter return
set returned.payload noTaxiPayload8
set returned.Dest noTaxiDest8
set @counter return
set returned.payload noTaxiPayload9
set returned.Dest noTaxiDest9
set @counter return
set returned.payload noTaxiPayload10
set returned.Dest noTaxiDest10
set @counter return
set returned.payload noTaxiPayload11
set returned.Dest noTaxiDest11
set @counter return
set returned.payload noTaxiPayload12
set returned.Dest noTaxiDest12
set @counter return
set returned.payload noTaxiPayload13
set returned.Dest noTaxiDest13
set @counter return
end
ubind returned.payload
set returnedGood false
jump 497 equal @unit null
sensor dead @unit @dead
jump 497 equal dead true
sensor ctrld @unit @controlled
jump 497 greaterThanEq ctrld 2
jump 497 equal ctrld 0
sensor hisFlag @unit @flag
jump 575 equal hisFlag ff3
jump 607 equal hisFlag ff2
jump 496 notEqual hisFlag ff
set returnedGood true
jump 497 equal returned.Dest null
sensor returned.DestType returned.Dest @type
jump 497 notEqual returned.DestType lt
jump 493 equal prevReturned.DestType returned.DestType
set prevReturned.DestType returned.DestType
jump 532 always @unit prevNoTaxiUnit
jump 497 equal @unit prevNoTaxiUnit
set prevNoTaxiUnit @unit
jump 532 always @unit prevNoTaxiUnit
set prevFlag.noTaxi hisFlag
set fi2 null
jump 532 equal returnedGood true
ubind upgraderType
jump 473 equal @unit null
jump 504 notEqual fi2 null
set fi2 @unit
jump 509 always fi2 null
sensor fi2Dead fi2 @dead
jump 508 equal fi2Dead false
set fi2 null
jump 574 always @unit fi2
jump 574 equal @unit fi2
sensor ctrld @unit @controlled
jump 499 greaterThanEq ctrld 2
jump 513 equal ctrld 1
ucontrol flag 0 0 0 0 0
sensor uflag @unit @flag
jump 516 equal prevFlag.noTaxi 0
jump 499 equal uflag prevFlag.noTaxi
jump 499 notEqual uflag 0
jump 499 equal uflag ff2
jump 499 equal uflag ff3
sensor noTaxiUnit.xDist @unit @x
sensor noTaxiUnit.yDist @unit @y
set noTaxiLink.dist link
sensor noTaxiLink.xDist noTaxiLink.dist @x
sensor noTaxiLink.yDist noTaxiLink.dist @y
op sub ∆x.NoTaxi noTaxiLink.xDist noTaxiUnit.xDist
op sub ∆y.NoTaxi noTaxiLink.yDist noTaxiUnit.yDist
op len noTaxiUnit.dist ∆x.NoTaxi ∆y.NoTaxi
jump 499 greaterThan noTaxiUnit.dist maxPayloadDistance
ucontrol flag ff 0 0 0 0
set storeNoTaxiPayload @unit
op add return @counter 1
op add @counter @counter 1
jump 575 always x false
op mul paySel 3 unitIndex
op add @counter @counter paySel
set noTaxiPayload1 storeNoTaxiPayload
set noTaxiDest1 noTaxiLink.dist
set @counter return
set noTaxiPayload2 storeNoTaxiPayload
set noTaxiDest2 noTaxiLink.dist
set @counter return
set noTaxiPayload3 storeNoTaxiPayload
set noTaxiDest3 noTaxiLink.dist
set @counter return
set noTaxiPayload4 storeNoTaxiPayload
set noTaxiDest4 noTaxiLink.dist
set @counter return
set noTaxiPayload5 storeNoTaxiPayload
set noTaxiDest5 noTaxiLink.dist
set @counter return
set noTaxiPayload6 storeNoTaxiPayload
set noTaxiDest6 noTaxiLink.dist
set @counter return
set noTaxiPayload7 storeNoTaxiPayload
set noTaxiDest7 noTaxiLink.dist
set @counter return
set noTaxiPayload8 storeNoTaxiPayload
set noTaxiDest8 noTaxiLink.dist
set @counter return
set noTaxiPayload9 storeNoTaxiPayload
set noTaxiDest9 noTaxiLink.dist
set @counter return
set noTaxiPayload10 storeNoTaxiPayload
set noTaxiDest10 noTaxiLink.dist
set @counter return
set noTaxiPayload11 storeNoTaxiPayload
set noTaxiDest11 noTaxiLink.dist
set @counter return
set noTaxiPayload12 storeNoTaxiPayload
set noTaxiDest12 noTaxiLink.dist
set @counter return
set noTaxiPayload13 storeNoTaxiPayload
set noTaxiDest13 noTaxiLink.dist
set @counter return
jump 642 always x false
ubind returned.payload
jump 622 equal managePayloads true
ucontrol boost 1 noTaxiUnit.y 0.7 unitPayEnterWithin 0
sensor queue returned.Dest @payloadCount
sensor noTaxiLink.x returned.Dest @x
sensor noTaxiLink.y returned.Dest @y
op land firstNoTaxi.Move noTaxiLink.x noTaxiLink.y
jump 574 equal firstNoTaxi.Move 0
sensor noTaxiUnit.x @unit @x
sensor noTaxiUnit.y @unit @y
sensor noTaxiLink.Size returned.Dest @size
op sub noTaxiLink.SizeWithin noTaxiLink.size 0.8
ucontrol within noTaxiLink.x noTaxiLink.y noTaxiLink.SizeWithin unitPayEnterWithin 0
jump 615 equal unitPayEnterWithin true
jump 612 equal air true
jump 612 equal unitBase @nova
op add noTaxiSize.halt.max noTaxiLink.Size 4
ucontrol within noTaxiLink.x noTaxiLink.y noTaxiSize.halt.max unitStuck.skip 0
jump 612 equal unitStuck.skip true
ucontrol pathfind noTaxiLink.x noTaxiLink.y 0.7 unitPayEnterWithin 0
set prev.stepX noTaxiUnit.x
set prev.stepY noTaxiUnit.y
op add cooldown @time 25
jump 598 greaterThanEq cooldown @time
sensor noTaxiUnit.x @unit @x
sensor noTaxiUnit.y @unit @y
op sub ∆x.stuck.coords noTaxiUnit.x prev.stepX
op sub ∆y.stuck.coords noTaxiUnit.y prev.stepY
op len distance.stuck.tt ∆x.stuck.coords ∆y.stuck.coords
jump 607 lessThanEq distance.stuck.tt 0
jump 612 greaterThanEq queue 1
jump 612 always queue 1
jump 610 equal ignoreStuckUnits false
ucontrol unbind 0 noTaxiLink.y 0.7 unitPayEnterWithin 0
jump 620 always unitPayEnterWithin true
ucontrol flag ff2 noTaxiLink.y 0.7 unitPayEnterWithin 0
jump 639 always unitPayEnterWithin true
ucontrol pathfind noTaxiLink.x noTaxiLink.y 0.7 unitPayEnterWithin 0
ucontrol flag ff noTaxiLink.y 0.7 unitPayEnterWithin 0
jump 574 always unitPayEnterWithin true
ucontrol itemDrop returned.Dest 9999 0.7 unitPayEnterWithin 0
ucontrol flag ff noTaxiLink.y 0.7 unitPayEnterWithin 0
ucontrol payEnter noTaxiUnit.x noTaxiUnit.y 0.7 unitPayEnterWithin 0
sensor unbindIt returned.Dest @payloadCount
jump 574 lessThanEq unbindIt 0
ubind 0
end
sensor payload.getblock.x @unit @x
sensor payload.getblock.y @unit @y
ucontrol getBlock payload.getblock.x payload.getblock.y payload.Type payload.building 0
jump 627 equal payload.building returned.Dest
jump 629 notEqual payload.building returned.Dest
ucontrol boost 0 payload.getblock.y payload.Type 0 0
jump 636 always unbindIt 0
sensor payload.getblockApp.x link @x
sensor payload.getblockApp.y link @y
ucontrol boost 1 payload.getblock.y payload.Type 0 0
ucontrol pathfind payload.getblockApp.x payload.getblockApp.y getblock.Type 0 0
ucontrol flag ff3 payload.getblock.y getblock.Type 0 0
ucontrol within payload.getblockApp.x payload.getblockApp.y 3 conveyorWithinPayenter 0
jump 620 equal conveyorWithinPayenter 0
ucontrol stop payload.getblockApp.x payload.getblockApp.y getblock.Type 0 0
ucontrol payEnter payload.getblockApp.x payload.getblockApp.y getblock.Type 0 0
jump 620 always conveyorWithinPayenter 0
set thisStuck returned.payload
set check.once false
jump 644 always unbindIt 0
set check.once true
set thisStuck null
op add return @counter 1
op add @counter @counter 1
jump 702 always x false
op mul loaderSel 4 unitIndex
op add @counter @counter loaderSel
set returnedSupport support1
set returnedStuck.tt stuck.unit1
set returnedDest.tt dest.tt1
set @counter return
set returnedSupport support2
set returnedStuck.tt stuck.unit2
set returnedDest.tt dest.tt2
set @counter return
set returnedSupport support3
set returnedStuck.tt stuck.unit3
set returnedDest.tt dest.tt3
set @counter return
set returnedSupport support4
set returnedStuck.tt stuck.unit4
set returnedDest.tt dest.tt4
set @counter return
set returnedSupport support5
set returnedStuck.tt stuck.unit5
set returnedDest.tt dest.tt5
set @counter return
set returnedSupport support6
set returnedStuck.tt stuck.unit6
set returnedDest.tt dest.tt6
set @counter return
set returnedSupport support7
set returnedStuck.tt stuck.unit7
set returnedDest.tt dest.tt7
set @counter return
set returnedSupport support8
set returnedStuck.tt stuck.unit8
set returnedDest.tt dest.tt8
set @counter return
set returnedSupport support9
set returnedStuck.tt stuck.unit9
set returnedDest.tt dest.tt9
set @counter return
set returnedSupport support10
set returnedStuck.tt stuck.unit10
set returnedDest.tt dest.tt10
set @counter return
set returnedSupport support11
set returnedStuck.tt stuck.unit11
set returnedDest.tt dest.tt11
set @counter return
set returnedSupport support12
set returnedStuck.tt stuck.unit12
set returnedDest.tt dest.tt12
set @counter return
set returnedSupport support13
set returnedStuck.tt stuck.unit13
set returnedDest.tt dest.tt13
set @counter return
end
ubind returnedSupport
jump 729 equal @unit null
sensor dead @unit @dead
jump 729 equal dead true
sensor ctrld @unit @controlled
jump 725 greaterThanEq ctrld 2
jump 729 equal ctrld 0
sensor hisFlag @unit @flag
jump 856 equal hisFlag ff1
jump 723 notEqual hisFlag ff
ubind returnedStuck.tt
jump 729 equal @unit null
sensor dead @unit @dead
jump 729 equal dead true
sensor ctrld @unit @controlled
jump 729 greaterThanEq ctrld 2
sensor hisFlag @unit @flag
jump 730 notEqual hisFlag ff2
sensor returnedType @unit @type
jump 729 notEqual returnedType upgraderType
jump 800 always ctrld 1
set prevtt.flag hisFlag
jump 729 always ctrld 1
ubind upgraderType
jump 855 equal @unit null
sensor payloadSize @unit @size
jump 731 always uflag ff
set returnedStuck.tt thisStuck
sensor payloadSize returnedStuck.tt @size
jump 855 equal check.once true
set loaderType @mega
jump 738 lessThan payloadSize 2.5
set loaderType @quad
jump 737 lessThan payloadSize 4.5
set loaderType @oct
jump 855 equal returnedStuck.tt null
op add return @counter 1
op add @counter @counter 1
jump 768 always payloadSize 4.5
op mul loaderSel 2 unitIndex
op add @counter @counter loaderSel
set prevStored support1
set @counter return
set prevStored support2
set @counter return
set prevStored support3
set @counter return
set prevStored support4
set @counter return
set prevStored support5
set @counter return
set prevStored support6
set @counter return
set prevStored support7
set @counter return
set prevStored support8
set @counter return
set prevStored support9
set @counter return
set prevStored support10
set @counter return
set prevStored support11
set @counter return
set prevStored support12
set @counter return
set prevStored support13
ubind prevStored
jump 776 equal @unit null
sensor dead @unit @dead
jump 776 equal dead 1
sensor ctrld @unit @controlled
jump 776 greaterThanEq ctrld 2
sensor returnedType @unit @type
jump 795 equal returnedType loaderType
set fi3 null
ubind loaderType
jump 781 notEqual fi3 null
set fi3 @unit
jump 786 always fi1 null
sensor fi3Dead fi3 @dead
jump 785 equal fi3Dead false
set fi3 null
jump 855 always fi1 null
jump 855 equal @unit fi3
sensor ctrld @unit @controlled
jump 777 greaterThanEq ctrld 2
jump 790 equal ctrld 1
ucontrol flag 0 0 0 0 0
sensor uflag @unit @flag
jump 793 equal prevtt.flag 0
jump 777 equal uflag prevtt.flag
jump 777 notEqual uflag 0
ucontrol flag ff 0 0 0 0
set storeDest link
set storeLoad @unit
set storePayload thisStuck
op add return @counter 1
op add @counter @counter 1
jump 856 always x false
op mul loaderSel 4 unitIndex
op add @counter @counter loaderSel
set support1 storeLoad
set stuck.unit1 storePayload
set dest.tt1 storeDest
set @counter return
set support2 storeLoad
set stuck.unit2 storePayload
set dest.tt2 storeDest
set @counter return
set support3 storeLoad
set stuck.unit3 storePayload
set dest.tt3 storeDest
set @counter return
set support4 storeLoad
set stuck.unit4 storePayload
set dest.tt4 storeDest
set @counter return
set support5 storeLoad
set stuck.unit5 storePayload
set dest.tt5 storeDest
set @counter return
set support6 storeLoad
set stuck.unit6 storePayload
set dest.tt6 storeDest
set @counter return
set support7 storeLoad
set stuck.unit7 storePayload
set dest.tt7 storeDest
set @counter return
set support8 storeLoad
set stuck.unit8 storePayload
set dest.tt8 storeDest
set @counter return
set support9 storeLoad
set stuck.unit9 storePayload
set dest.tt9 storeDest
set @counter return
set support10 storeLoad
set stuck.unit10 storePayload
set dest.tt10 storeDest
set @counter return
set support11 storeLoad
set stuck.unit11 storePayload
set dest.tt11 storeDest
set @counter return
set support12 storeLoad
set stuck.unit12 storePayload
set dest.tt12 storeDest
set @counter return
set support13 storeLoad
set stuck.unit13 storePayload
set dest.tt13 storeDest
set @counter return
end
ubind returnedStuck.tt
jump 855 equal @unit null
sensor NaN.FlagReturnCheck.min @unit @flag
jump 855 notEqual NaN.FlagReturnCheck.min ff2
ucontrol unbind 0 0 0 0 0
ubind returnedSupport
sensor payloadType returnedSupport @payloadType
jump 921 equal payloadType upgraderType
jump 905 equal payloadType null
sensor destAngle returnedDest.tt @rotation
sensor dx returnedDest.tt @x
sensor dy returnedDest.tt @y
jump 870 equal defaultDrop 0
jump 872 always defaultDrop false
op land dropping dropx dropy
jump 879 equal dropping true
op mul theta destAngle 90
op cos ∆x theta 90
op sin ∆y theta 90
op mul ∆x ∆x defaultDropDist
op add dropx ∆x dx
op mul ∆y ∆y defaultDropDist
op add dropy ∆y dy
ucontrol within dropx dropy safeDropZoneRadius s 0
set dropTry.tt false
jump 885 equal s true
ucontrol move dropx dropy 5 s 0
ucontrol payDrop 0 0 0 0 0
jump 888 always s true
ucontrol payDrop 0 0 0 0 0
ucontrol flag ff1 dy 0 0 0
set dropTry.tt true
jump 891 greaterThan unitDropAttempts.tt 2
op add unitDropAttempts.tt unitDropAttempts.tt 1
jump 856 always payloadType null
jump 903 notEqual dropTry.tt true
op add Droptt.time @time 555
sensor unit.ttdropx @unit @x
sensor unit.ttdropy @unit @y
ucontrol move dx dy 5 s 0
ucontrol payDrop dx dy 5 s 0
sensor loadtt.type returnedSupport @payloadType
jump 903 equal loadtt.type upgraderType
jump 903 equal loadtt.type null
jump 893 greaterThan Droptt.time @time
ucontrol move unit.ttdropx unit.ttdropy 5 s 0
ucontrol payDrop 0 0 0 0 0
set unitDropAttempts.tt 0
jump 855 always payloadType null
sensor px returnedStuck.tt @x
sensor py returnedStuck.tt @y
sensor returnedType returnedStuck.tt @type
jump 903 notEqual returnedType upgraderType
op land firstMove px py
jump 855 equal firstMove 0
ucontrol within px py 1.2 unitTakeWithin 0
jump 916 equal unitTakeWithin true
ucontrol move px py 0 0 0
ucontrol flag ff dy 0 0 0
jump 855 always unitTakeWithin true
ucontrol payTake true dy 0 0 0
sensor payloadCount returnedSupport @payloadCount
jump 855 lessThanEq payloadCount 0
ucontrol flag ff1 dy 0 0 0
jump 856 always payloadCount 0
sensor dx returnedDest.tt @x
sensor dy returnedDest.tt @y
sensor use returnedDest.tt @payloadCount
op land firstMove dx dy
jump 855 equal firstMove 0
ucontrol within dx dy distToDropStuckUnits unitDropWithin 0
jump 932 equal unitDropWithin true
op sub distToDropStuckUnits.approach.halt distToDropStuckUnits 1.225
ucontrol approach dx dy distToDropStuckUnits.approach.halt unitDropWithin 0
ucontrol flag ff1 dy 1.7 unitDropWithin 0
jump 855 always unitTakeWithin true
jump 928 greaterThanEq use 1
ucontrol payDrop dx dy 1.7 unitDropWithin 0
ucontrol itemDrop returnedDest 99999 0 0 0
sensor destPayloadCount returnedDest.tt @payloadCount
jump 855 lessThanEq destPayloadCount 0
ucontrol flag ff dy 1.7 unitDropWithin 0
jump 855 always unitTakeWithin true
set storeLoad null
set storePayload null
set storeDest null
jump 950 equal taxi.Index.cleared true
set unitIndex -1
set return @counter
jump 948 lessThan unitIndex 12
set taxi.Index.cleared true
jump 950 always unitIndex 13
op add unitIndex unitIndex 1
jump 291 always taxi.Index.cleared true
jump 958 equal air.Index.cleared true
set unitIndex -1
set return @counter
jump 956 lessThan unitIndex 12
set air.Index.cleared true
jump 958 always unitIndex 13
op add unitIndex unitIndex 1
jump 801 always unitIndex 13
jump 968 equal payenter.Index.cleared true
set unitIndex -1
set storeNoTaxiPayload null
set noTaxiLink.dist null
set return @counter
jump 966 lessThan unitIndex 12
set payenter.Index.cleared true
jump 968 always unitIndex 12
op add unitIndex unitIndex 1
jump 533 always MadeBylorD Version1.3
set prev.unitBase unitBase
end
